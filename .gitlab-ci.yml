# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service



stages:
  - test
  - build
#  - deploy
#  - release

variables:
    DB_CONNECTION: pgsql
    DB_HOST: pgsql
    DB_PORT: 5432
    DB_DATABASE: postgres
    DB_USERNAME: postgres
    DB_PASSWORD: password
    
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

codestyle:
  stage: test
  image: registry.ipaymu.app/arakattack/laravel-deployer:latest
  cache: {}
  script:
# Scripts must follow coding standar guidelines, please read https://php7.org/guidelines/  

    - echo "Mess Detection"
    #- phpmd app text codesize,unusedcode,naming

    - echo "Code Beautifier and Fixer"
    #- phpcbf --standard=psr2 app

    - echo "Code Sniffer"
    #- phpcs --standard=psr2 app


    
phpunit:
  stage: test
  image: registry.ipaymu.app/arakattack/laravel-deployer:latest
  services:
  - postgres:10.6

  variables:
    DB_CONNECTION: pgsql
    DB_HOST: postgres
    DB_PORT: 5432
    DB_DATABASE: postgres
    DB_USERNAME: postgres
    DB_PASSWORD: password
    
  script:
    - composer self-update
    - composer install --prefer-dist --no-ansi --no-interaction
    - cp .env.example .env
    - php artisan key:generate
    - php artisan config:cache

  # Run database migrations.
    - php artisan migrate

  # Run database seed
    - php artisan db:seed
  
    - php artisan vendor:publish --all
    - php artisan storage:link
    - composer dump-autoload
    
    # PHPUnit
    #- echo "Running PHPUnit Tests"
    #- phpunit --colors --debug
build-master:
  stage: build
  image: docker:latest

  services:
    - docker:dind

  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

